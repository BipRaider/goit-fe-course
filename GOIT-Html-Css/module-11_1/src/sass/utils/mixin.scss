


//add line below element and item transparency
@mixin line-below($selector, $opacity) {
   #{$selector}::after {
    content: "";
    -webkit-transform: translateY(13px);
            transform: translateY(13px);
    opacity: $opacity;
    height: $w;

    -webkit-transition: background-color $hover_time linear 0ms;
    transition: background-color $hover_time linear 0ms;
    background-color:$color_lg;
  }
}


//add load time to item on hover and item transparency
@mixin load-time-hover($selector, $opacity) {
  #{$selector}:hover::after,
  #{$selector}:focus::after{
    opacity: $opacity;
    -webkit-transition: opacity $hover_time linear 0ms;
    transition: opacity $hover_time linear 0ms;
  }

}
//add color to hover
@mixin hover-color($selector, $color) {
  #{$selector}:hover,
  #{$selector}:focus {
    -webkit-transition: color $hover_time linear 0ms;
    transition: color $hover_time linear 0ms;
   color:$color;

 }
}
// $opacity0: 0 ;
// $opacity1: 1 ;

// @include line-below(".nav-page__link",$opacity0);
// @include load-time-hover(".nav-page__link",$opacity1);
// @include hover-color(".nav-page__link" , $color_lg);
// @include list-flex(""); -по умолчанию стоит list
@mixin list-flex($name:"list") {
  display: -webkit-box;
  display: flex;

    @if $name== "list"{
    -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
              flex-direction: column;
      -webkit-box-pack: justify;
              justify-content: space-between;
      -webkit-box-align: center;
              align-items: center;

    } @else if $name== "fccc"{
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
            flex-direction: column;
      -webkit-box-pack: center;
            justify-content: center;
      -webkit-box-align: center;
            align-items: center;

    }@else if $name== "fsbfe"{
      -webkit-box-pack:justify;
            justify-content:space-between;
       -webkit-box-align: end;
            align-items: flex-end;

    }@else if $name== "fsb"{
      -webkit-box-pack:	justify;
          justify-content:	space-between;

    }@else if $name== "ffe"{
      -webkit-box-pack: end;
          justify-content: flex-end;
      -webkit-box-align:	stretch;
          align-items:	stretch;

    }@else if $name== "fsbc"{
      -webkit-box-pack: justify;
                justify-content: space-between;
      -webkit-box-align: center;
                align-items: center;

    }@else if $name== "fwsb"{
      flex-wrap: wrap;
        -webkit-box-pack: justify;
                justify-content: space-between;

    }@else if $name== "fsbfs"{
      -webkit-box-pack: justify;
                justify-content: space-between;
        -webkit-box-align:	start;
                align-items:	flex-start;

    }@else if $name== "fc"{
      -webkit-box-pack:center;
                justify-content:center;

    }@else if $name== "fcc"{
      -webkit-box-pack: center;
          justify-content: center;
      -webkit-box-align: center;
          align-items: center;

    }@else if $name== "fcfe" {
      -webkit-box-orient:	vertical;
      -webkit-box-direction:	normal;
              flex-direction:	column;
      -webkit-box-pack: end;
              justify-content: flex-end;

    }@else if $name== "fcfsc"{
      -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
                flex-direction: column;
        -webkit-box-pack: start;
              justify-content: flex-start;
        -webkit-box-align: center;
                align-items: center;

    }@else if $name== "fwcsbc"{
         flex-wrap: wrap;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
                flex-direction: column;
        -webkit-box-pack: justify;
                justify-content: space-between;
        -webkit-box-align: center;
                align-items: center;

    }

}

// //mixin for icon
// $icons:fecebook, linkedin,twitter,inst;  //Название иконок в папке
// //  пораметры для блока иконки
// %icon{
//   display: inline-block;
//   width: 40px;
//   height: 40px;
// }

// @mixin generate-icon($baseclass, $list, $path , $ext){
//   @each $icon in $list {
//     .#{$baseclass}#{$icon}{
//       @extend %icon;
//       background-image: url(#{$path}#{$icon}.#{$ext});
//     }
//   }
// }

// @include generate-icon("icon-",$icons,"../../images/img_partner/" , "png" )

// @mixin generate-icon              - имя микса
// ($baseclass, $list, $path , $ext) - вносимые значения
//       {                           - старт микса
//   @each                           - обьявление цыкла с переборкой данных
//       $icon                       - начальные парамеры которые запишут в клас для элемента
//       in                          - применить в  - говорит взять имена из такой переменной
//       $list                       - имя переменной  откуда брать имена для класов и id
//       {                           - старт цыкла
//     .                             - поставит точку в начале класса (.class , #id - или поставит любой символ что мы напишим )
//     #                             - начало в вода новых данных
//     {$baseclass}                  - в кривых скобках записуем данные ( в нашем случаи базавое имя класса )
//     #                             - начало в вода новых данных
//     {$icon}                       - в кривых скобках записуем данные ( в нашем случаи  имена взятые из шаблона имён ($icons))
//     {                             - начало сбора класса или id (вносятся параметры для класа)
//       @extend %icon;              - записуеться параметры шаблона
//       background-image: url(      - имя ТЕГа (любой тэг)
//         #                         - начало в вода новых данных
//         {$path}                   - в кривых скобках записуем данные ( в нашем случаи имя переменной )
//         #                         - начало в вода новых данных
//         {$icon}                   - в кривых скобках записуем данные ( в нашем случаи имя переменной)
//         .                         - поставит точку (в этом случае эта точка  нужна для того чтобы было коректное имя картинки "image.png")
//         #                         - начало в вода новых данных
//         {$ext}                    - в кривых скобках записуем данные ( в нашем случаи имя переменной )
//         );                        - конец сборки ТЕГа
//     }                             - конец сборки класса
//   }                               - конец сборки цыкла
// }                                 - конец сборки микса


